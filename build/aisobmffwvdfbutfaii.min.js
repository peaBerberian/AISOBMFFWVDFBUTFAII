!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t,n){e.exports=function(){"use strict";function e(e,t){return 16777216*e[0+t]+65536*e[1+t]+256*e[2+t]+e[3+t]}function t(e,t){return 4294967296*(16777216*e[0+t]+65536*e[1+t]+256*e[2+t]+e[3+t])+16777216*e[4+t]+65536*e[5+t]+256*e[6+t]+e[7+t]}function n(e,t,n){if(!e)return"";var r=e.slice(t,n+t);return String.fromCharCode.apply(String,r)}var r={name:"File Type Box",description:"File type and compatibility",content:[{key:"major_brand",description:"Brand identifier."},{key:"minor_version",description:"informative integer for the minor version of the major brand"},{key:"compatible_brands",description:"List of brands"}],parser:function(e){for(var t=e.getTotalLength(),n=e.bytesToASCII(4),r=e.bytesToInt(4),i=[],a=8;a<t;a+=4)i.push(e.bytesToASCII(4));return{major_brand:n,minor_version:r,compatible_brands:i.join(", ")}}},i={"1077EFECC0B24D02ACE33C1E52E2FB4B":"cenc","1F83E1E86EE94F0DBA2F5EC4E3ED1A66":"SecureMedia","35BF197B530E42D78B651B4BF415070F":"DivX DRM","45D481CB8FE049C0ADA9AB2D2455B2F2":"CoreCrypt","5E629AF538DA4063897797FFBD9902D4":"Marlin","616C7469636173742D50726F74656374":"AltiProtect","644FE7B5260F4FAD949A0762FFB054B4":"CMLA","69F908AF481646EA910CCD5DCCCB0A3A":"Marlin","6A99532D869F59229A91113AB7B1E2F3":"MobiDRM","80A6BE7E14484C379E70D5AEBE04C8D2":"Irdeto","94CE86FB07FF4F43ADB893D2FA968CA2":"FairPlay","992C46E6C4374899B6A050FA91AD0E39":"SteelKnot","9A04F07998404286AB92E65BE0885F95":"PlayReady","9A27DD82FDE247258CBC4234AA06EC09":"Verimatrix VCAS",A68129D3575B4F1A9CBA3223846CF7C3:"VideoGuard Everywhere",ADB41C242DBF4A6D958B4457C0D27B95:"Nagra",B4413586C58CFFB094A5D4896C1AF6C3:"Viaccess-Orca",DCF4E3E362F158187BA60A6FE33FF3DD:"DigiCAP",E2719D58A985B3C9781AB030AF78D30E:"ClearKey",EDEF8BA979D64ACEA3C827DCD51D21ED:"Widevine",F239E769EFA348509C16A903C6932EFB:"PrimeTime"},a={dinf:{name:"Data Information Box",description:"Objects that declare the location of the media information in a track.",container:!0},dref:{name:"Data Reference Box",description:"",container:!0,parser:function(e){var t=e.bytesToInt(1),n=e.bytesToInt(3);if(0!==t)throw new Error("invalid version");if(0!==n)throw new Error("invalid flags");return{version:t,flags:n,entry_count:e.bytesToInt(4)}}},edts:{name:"Edit Box",description:"Maps the presentation time‐line to the media time‐line as it is stored in the file.",container:!0},free:{name:"Free Space Box",description:"This box can be completely ignored"},ftyp:r,hdlr:{name:"Handler Reference Box",description:"This box within a Media Box declares media type of the track, and thus the process by which the media‐data in the track is presented",parser:function(e){var t={version:e.bytesToInt(1),flags:e.bytesToInt(3),pre_defined:e.bytesToInt(4),handler_type:e.bytesToInt(4),reserved:[e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4)]},n=e.getRemainingLength();for(t.name="";n--;)t.name+=String.fromCharCode(parseInt(e.bytesToInt(1),10));return t}},iods:{name:"Initial Object Descriptor Box"},leva:{name:"Level Assignment Box",parser:function(e){return{version:e.bytesToInt(1),flags:e.bytesToInt(3)}}},mdat:{name:"Media Data Box",description:"the content's data"},mdhd:{name:"Media Header Box",description:"The media header declares overall information that is media‐independent, and relevant to characteristics of the media in a track.",parser:function(e){var t=e.bytesToInt(1),n=e.bytesToInt(3),r=e.bytesToInt(t?8:4),i=e.bytesToInt(t?8:4),a=e.bytesToInt(4),o=e.bytesToInt(t?8:4),s=e.bytesToInt(2);return{version:t,flags:n,creation_time:r,modification_time:i,timescale:a,duration:o,pad:s>>15&1,language:[String.fromCharCode(96+(s>>10&31)),String.fromCharCode(96+(s>>5&31)),String.fromCharCode(96+(31&s))].join(""),predifined:e.bytesToInt(2)}}},mdia:{name:"Track Media Structure",description:"declare information about the media data within a track.",container:!0},mehd:{name:"Movie Extends Header Box",description:"Provides the overall duration, including fragments, of a fragmented movie. If this box is not present, the overall duration must be computed by examining each fragment.",parser:function(e){var t=e.bytesToInt(1);if(t>1)throw new Error("invalid version");return{version:t,flags:e.bytesToInt(3),fragment_duration:1===t?e.bytesToInt(8):e.bytesToInt(4)}}},mfhd:{name:"Movie Fragment Header Box",description:"This box contains just a sequence number (usually starting at 1), as a safety check.",parser:function(e){return{version:e.bytesToInt(1),flags:e.bytesToInt(3),sequence_number:e.bytesToInt(4)}}},minf:{name:"Media Information Box",description:"This box contains all the objects that declare characteristic information of the media in the track.",container:!0},moof:{name:"Movie Fragment Box",description:"",container:!0},moov:{name:"Movie Box",description:"The movie metadata",container:!0},mvex:{name:"Movie Extends Box",container:!0},mvhd:{name:"Movie Header Box",description:"This box defines overall information which is media‐independent, and relevant to the entire presentation considered as a whole.",content:[{name:"version",description:"mvhd version",key:"version"},{name:"flags",description:"mvhd flags",key:"flags"},{name:"creation_time",description:"An integer that declares the creation time of the presentation (in seconds since midnight, Jan. 1, 1904, in UTC time)",key:"creationTime"},{name:"modification_time",description:"An integer that declares the most recent time the presentation was modified (in seconds since midnight, Jan. 1, 1904, in UTC time)",key:"modificationTime"},{name:"timescale",description:"An integer that specifies the time‐scale for the entire presentation; this is the number of time units that pass in one second. For example, a t me coordinate system that measures time in sixtieths of a second has a time scale of 60.",key:"timescale"},{name:"duration",description:"An integer that declares length of the presentation (in the indicated timescale). This property is derived from the presentation’s tracks: the value of this field corresponds to the duration of the longest track in the presentation. If the durat ion cannot be determined then duration is set to all 1s.",key:"duration"},{name:"rate",description:"A fixed point 16.16 number that indicates the preferred rate to play the presentation; 1.0 (0x00010000) is normal forward playback ",key:"rate"},{name:"volume",description:"A fixed point 8.8 number that indicates the preferred playback volume. 1.0 (0x0100) is full volume.",key:"volume"},{name:"reserved 1",description:"Reserved 16 bits",key:"reserved1"},{name:"reserved 2",description:"Reserved 2*32 bits",key:"reserved2"},{name:"matrix",description:"Provides a transformation matrix for the video; (u,v,w) are  restricted here to (0,0,1), hex values (0,0,0x40000000).",key:"matrix"},{name:"pre-defined",description:"Pre-defined 32*6 bits.",key:"predefined"},{name:"next_track_ID",description:"A non‐zero integer that indicates a value to use for the track ID of the next track to be added to this presentation. Zero is not a valid track ID value. The value of next_track_ID shall be larger than the largest track‐ID in use. If this valu e is equal to all 1s (32‐bit maxint), and a new media track is to be added, then a search must be made in the file for an unused track identifier.",key:"nextTrackId"}],parser:function(e){var t=e.bytesToInt(1);if(t>1)throw new Error("invalid version");var n,r,i,a,o=e.bytesToInt(3);1===t?(n=e.bytesToInt(8),r=e.bytesToInt(8),i=e.bytesToInt(4),a=e.bytesToInt(8)):(n=e.bytesToInt(4),r=e.bytesToInt(4),i=e.bytesToInt(4),a=e.bytesToInt(4));for(var s=[e.bytesToInt(2),e.bytesToInt(2)].join("."),d=[e.bytesToInt(1),e.bytesToInt(1)].join("."),c=e.bytesToInt(2),l=[e.bytesToInt(4),e.bytesToInt(4)],m=[],f=0;f<9;f++)m.push(e.bytesToInt(4));return{version:t,flags:o,creationTime:n,modificationTime:r,timescale:i,duration:a,rate:s,volume:d,reserved1:c,reserved2:l,matrix:m,predefined:[e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4)],nextTrackId:e.bytesToInt(4)}}},pdin:{name:"Progressive Download Information Box",description:"",content:[{name:"version",description:"pdin version",key:"version"},{name:"flags",description:"pdin flags",key:"flags"},{name:"rate",description:"Download rate expressed in bytes/second",key:"rate"},{name:"initial_delay",description:"Suggested delay to use when playing the file, such that if download continues at the given rate, all data within the file will arrive in time for its use and playback should not need to stall.",key:"delay"}],parser:function(e){var t=e.bytesToInt(1);if(0!==t)throw new Error("invalid version");return{version:t,flags:e.bytesToInt(3),rate:e.bytesToInt(4),delay:e.bytesToInt(4)}}},pssh:{name:"Protection System Specific Header",description:"",parser:function(e){var t={};if(t.version=e.bytesToInt(1),t.version>1)throw new Error("invalid version");t.flags=e.bytesToInt(3),t.systemID=e.bytesToHex(16);var n=i[t.systemID];if(n&&(t.systemID+=" (".concat(n,")")),1===t.version){t.KID_count=e.bytesToInt(4),t.KIDs=[];for(var r=t.KID_count;r--;)t.KIDs.push(e.bytesToASCII(16))}return t.data_length=e.bytesToInt(4),t.data=e.bytesToASCII(t.data_length),t}},sdtp:{name:"Independent and Disposable Samples Box",description:"",parser:function(e){var t={version:e.bytesToInt(1),flags:e.bytesToInt(3)},n=e.getRemainingLength();for(t.samples=[];n--;){var r=e.bytesToInt(1);t.samples.push({is_leading:r>>6&3,sample_depends_on:r>>4&3,sample_is_depended_on:r>>2&3,sample_has_redundancy:3&r})}return t}},sidx:{name:"Segment Index Box",description:"Index of the media stream",parser:function(e){for(var t=e.bytesToInt(1),n=e.bytesToInt(3),r=e.bytesToInt(4),i=e.bytesToInt(4),a=e.bytesToInt(0===t?4:8),o=e.bytesToInt(0===t?4:8),s=e.bytesToInt(2),d=e.bytesToInt(2),c=[],l=d;l--;){var m=e.bytesToInt(4),f=e.bytesToInt(4),u=e.bytesToInt(4);c.push({reference_type:m>>31&1,referenced_size:2147483647&m,subsegment_duration:f,starts_with_SAP:u>>31&1,SAP_type:u>>28&7,SAP_delta_time:268435455&u})}return{version:t,flags:n,reference_id:r,timescale:i,earliest_presentation_time:a,first_offset:o,reserved:s,reference_count:d,items:c}}},skip:{name:"Free Space Box",description:"This box can be completely ignored."},styp:{name:"Segment Type Box",description:"",content:r.content,parser:r.parser},tfdt:{name:"Track Fragment Decode Time",description:"The absolute decode time, measured on the media timeline, of the first sample in decode order in the track fragment",parser:function(e){var t=e.bytesToInt(1);return{version:t,flags:e.bytesToInt(3),baseMediaDecodeTime:e.bytesToInt(t?8:4)}}},tfhd:{name:"Track Fragment Header Box",description:"",parser:function(e){var t={};t.version=e.bytesToInt(1);var n=e.bytesToInt(3),r=1&n,i=2&n,a=8&n,o=16&n,s=32&n,d=65536&n,c=131072&n;return t.flags={"base-data-offset-present":!!r,"sample-description-index-present":!!i,"default-sample-duration-present":!!a,"default-sample-size-present":!!o,"default-sample-flags-present":!!s,"duration-is-empty":!!d,"default-base-is-moof":!!c},t.track_ID=e.bytesToInt(4),r&&(t.base_data_offset=e.bytesToInt(8)),i&&(t.sample_description_index=e.bytesToInt(4)),a&&(t.default_sample_duration=e.bytesToInt(4)),o&&(t.default_sample_size=e.bytesToInt(4)),s&&(t.default_sample_flags=e.bytesToInt(4)),t}},tkhd:{name:"Track Header Box",description:"Characteristics of a single track.",parser:function(e){var t=e.bytesToInt(1);return{version:t,flags:e.bytesToInt(3),creation_time:e.bytesToInt(t?8:4),modification_time:e.bytesToInt(t?8:4),track_ID:e.bytesToInt(4),reserved1:e.bytesToInt(4),duration:e.bytesToInt(t?8:4),reserved2:[e.bytesToInt(4),e.bytesToInt(4)],layer:e.bytesToInt(2),alternate_group:e.bytesToInt(2),volume:[e.bytesToInt(1),e.bytesToInt(1)].join("."),reserved3:e.bytesToInt(2),matrix:[e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4),e.bytesToInt(4)],width:[e.bytesToInt(2),e.bytesToInt(2)],height:[e.bytesToInt(2),e.bytesToInt(2)]}}},traf:{name:"Track Fragment Box",description:"",container:!0},trak:{name:"Track Box",description:"Container box for a single track of a presentation. A presentation consists of one or more tracks. Each track is independent of the other tracks in the presentation and carries its own temporal and spatial information. Each track will contain its associated Media Box.",container:!0},trex:{name:"Track Extends Box",description:"sets up default values used by the movie fragments. By setting defaults in this way, space and complexity can be saved in each Track Fragment Box",parser:function(e){return{version:e.bytesToInt(1),flags:e.bytesToInt(3),track_id:e.bytesToInt(4),default_sample_description_index:e.bytesToInt(4),default_sample_duration:e.bytesToInt(4),default_sample_size:e.bytesToInt(4),default_sample_flags:e.bytesToInt(4)}}},trun:{name:"Track Fragment Run Box",parser:function(e){var t={};t.version=e.bytesToInt(1);var n=e.bytesToInt(3),r=1&n,i=4&n,a=256&n,o=512&n,s=1024&n,d=2048&n;t.flags={"data-offset-present":!!r,"first-sample-flags-present":!!i,"sample-duration-present":!!a,"sample-size-present":!!o,"sample-flags-present":!!s,"sample-composition-time-offset-present":!!d},t.sample_count=e.bytesToInt(4),r&&(t.data_offset=~~e.bytesToInt(4)),i&&(t.first_sample_flags=e.bytesToInt(4));var c=t.sample_count;for(t.samples=[];c--;){var l={};a&&(l.sample_duration=e.bytesToInt(4)),o&&(l.sample_size=e.bytesToInt(4)),s&&(l.sample_flags=e.bytesToInt(4)),d&&(l.sample_composition_time_offset=0===t.version?e.bytesToInt(4):~~e.bytesToInt(4)),t.samples.push(l)}return t}},"url ":{name:"Data Entry Url Box",description:"declare the location(s) of the media data used within the presentation.",parser:function(e){var t={};return t.version=e.bytesToInt(1),t.flags=e.bytesToInt(3),e.getRemainingLength()&&(t.location=String.fromCharCode.apply(String,e.bytesToInt(e.getRemainingLength()))),t}},"urn ":{name:"Data Entry Url Box",description:"declare the location(s) of the media data used within the presentation.",parser:function(e){var t={};return t.version=e.bytesToInt(1),t.flags=e.bytesToInt(3),e.getRemainingLength()&&(t.name=String.fromCharCode.apply(String,e.bytesToInt(e.getRemainingLength()))),t}},uuid:{name:"User-defined Box",description:"Custom box. Those are not yet parsed here."},vmhd:{name:"Video Media Header",description:"The video media header contains general presentation information, independent of the coding, for video media.",parser:function(e){var t=e.bytesToInt(1),n=e.bytesToInt(3);if(0!==t)throw new Error("invalid version");if(1!==n)throw new Error("invalid flags");return{version:t,flags:n,graphicsmode:e.bytesToInt(2),opcolor:[e.bytesToInt(2),e.bytesToInt(2),e.bytesToInt(2)]}}}};function o(r){for(var i=0,o=[],d=function(){var d=i,c=e(r,d);d+=4,1===c?(c=t(r,d),d+=8):0===c&&(c=r.length-i);var l=n(r,d,4);d+=4;var m={alias:l,size:c,values:[]};if("uuid"===l){for(var f=[],u=16;u--;)f.push(r[d]),d+=1;m.subtype=f}if(o.push(m),a[l]){var p=a[l],y=p.content?p.content.reduce((function(e,t){return e[t.key]={name:t.name||"",description:""|t.description},e}),{}):{name:"",description:""};m.name=p.name||"",m.description=p.description||"";var b,h=!!p.container,v=r.slice(d,c+i);if("function"==typeof p.parser){var T=function(r){var i=0;return{getNextByte:function(){this.getNextBytes(1)},getNextBytes:function(e){if(!(this.getRemainingLength()<e))return i+=e,r.slice(0,e)},bytesToInt:function(n){if(!(this.getRemainingLength()<n)){var a,o,s;switch(n){case 1:a=r[i];break;case 2:a=((o=r)[0+(s=i)]<<8)+o[1+s];break;case 3:a=function(e,t){return 65536*e[0+t]+256*e[1+t]+e[2+t]}(r,i);break;case 4:a=e(r,i);break;case 5:a=function(e,t){return 4294967296*e[0+t]+16777216*e[1+t]+65536*e[2+t]+256*e[3+t]+e[4+t]}(r,i);break;case 8:a=t(r,i);break;default:throw new Error("not implemented yet.")}return i+=n,a}},bytesToHex:function(e){if(!(this.getRemainingLength()<e)){var t=function(e,t,n){if(!e)return"";for(var r=e.slice(t,n+t),i="",a=0;a<r.length;a++){var o=(255&r[a]).toString(16);i+=o=1===o.length?"0"+o:o}return i.toUpperCase()}(r,i,e);return i+=e,t}},bytesToASCII:function(e){if(!(this.getRemainingLength()<e)){var t=n(r,i,e);return i+=e,t}},getTotalLength:function(){return r.length},getRemainingLength:function(){return Math.max(0,r.length-i)},isFinished:function(){return r.length<=i}}}(v),I={};try{I=p.parser(T)}catch(e){console.warn('impossible to parse "'.concat(l,'" box.'),e)}if(h){var g=T.getRemainingLength();b=v.slice(v.length-g)}else T.isFinished()||console.warn("not everything has been parsed for box: "+l+". Missing",T.getRemainingLength(),"bytes.");delete I.__data__,Object.keys(I).forEach((function(e){var t=y[e]||{};t.name||(t.name=e),m.values.push(Object.assign({value:I[e]},t))}))}if(h){var x=s(b||v);m.children=x}}i+=c};i<r.length;)d();return o}function s(e){if(e instanceof Uint8Array)return o(e);if(e instanceof ArrayBuffer)return o(new Uint8Array(e));if(e.buffer instanceof ArrayBuffer)return o(new Uint8Array(e.buffer));throw new Error("Unrecognized format. Please give an ArrayBuffer or TypedArray instead.")}return s}()},function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r);const a=document.getElementById("file-description"),o=e=>{const t=document.createElement("div");return t.appendChild(document.createTextNode(e)),t.innerHTML},s=e=>`\n    <div class="value-object-line">\n      ${Object.keys(e).map(t=>`\n      <div class="value-object-prop">\n        <span class="value-object-key">${o(t)}</span>:\n        <span class="value-object-value">${d(e[t])}</span>\n      </div>\n    `).join("")}\n    </div>\n  `,d=e=>{if(null!=e){switch(typeof e){case"object":return Array.isArray(e)?e.length?"number"==typeof e[0]?e.join(" "):e.map(s).join(" "):"no element":s(e);case"string":return`"${o(e)}"`}return o(e)}},c=e=>(e.values||[]).map(e=>{return`\n    <div class="box-value-entry">\n      <span class="box-value-key">${o((t=e).name)}</span>:\n      <span class="box-value-value">${d(t.value)}</span>\n    </div>\n  `;var t}).join(""),l=e=>{const t=(e.children||[]).map(l).join("");return`\n    <div class="box">\n      ${(e=>`\n    <div class="box-title">\n      <span class="box-name">${o(e.name)}</span>\n      <span class="box-alias">("${o(e.alias)}")</span>\n      <span class="box-size">${o(e.size)} bytes</span>\n    </div>\n  `)(e)}\n      ${(e=>`\n    <div class="box-description">\n      ${o(e.description)}\n    </div>\n  `)(e)}\n      ${c(e)}\n      ${t}\n    </div>\n  `};var m=(e=[])=>{console.log("rendering...",e),a.style.display="none",a.innerHTML='\n    <h2 id="result-title">Results</h2>\n  '+e.map(l).join(""),a.style.display="block"};if(window.File&&window.FileReader&&window.Uint8Array){document.getElementById("file-input").addEventListener("change",(function(e){const t=e.target.files;if(!t.length)return;const n=t[0],r=new FileReader;return r.onload=e=>{const t=new Uint8Array(e.target.result),n=i()(t);m(n)},r.readAsArrayBuffer(n),!1}),!1)}else{document.getElementById("choices-local-segment").style.display="none",document.getElementById("choices-separator").style.display="none"}if(window.fetch&&window.Uint8Array){function f(e){fetch(e).then(e=>e.arrayBuffer()).then(e=>{const t=i()(new Uint8Array(e));m(t)})}document.getElementById("url-input").addEventListener("keypress",(function(e){if(13==(e.keyCode||e.which)){const t=e.target.value;return t&&f(t),!1}}),!1),document.getElementById("url-button").addEventListener("click",(function(){const e=document.getElementById("url-input").value;if(e)return f(e),!1}),!1)}else{document.getElementById("choices-separator").style.display="none",document.getElementById("choices-url-segment").style.display="none"}}]);